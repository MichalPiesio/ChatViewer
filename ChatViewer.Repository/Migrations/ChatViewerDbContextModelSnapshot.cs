// <auto-generated />

#nullable disable

using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;

namespace ChatViewer.Repository.Migrations
{
    [DbContext(typeof(ChatViewerDbContext))]
    partial class ChatViewerDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.0");

            modelBuilder.Entity("ChatViewer.Repository.Entities.ChatEvent", b =>
                {
                    b.Property<Guid>("ChatEventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("ChatEventName")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("Chatter2Id")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ChatterId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EventDateTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Text")
                        .HasColumnType("TEXT");

                    b.HasKey("ChatEventId");

                    b.HasIndex("ChatEventName");

                    b.HasIndex("Chatter2Id");

                    b.HasIndex("ChatterId");

                    b.ToTable("ChatEvent");
                });

            modelBuilder.Entity("ChatViewer.Repository.Entities.ChatEventType", b =>
                {
                    b.Property<string>("ChatEventName")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.HasKey("ChatEventName");

                    b.ToTable("ChatEventType");
                });

            modelBuilder.Entity("ChatViewer.Repository.Entities.Chatter", b =>
                {
                    b.Property<Guid>("ChatterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.HasKey("ChatterId");

                    b.ToTable("Chatter");
                });

            modelBuilder.Entity("ChatViewer.Repository.Entities.ChatEvent", b =>
                {
                    b.HasOne("ChatViewer.Repository.Entities.ChatEventType", "ChatEventType")
                        .WithMany("ChatEvents")
                        .HasForeignKey("ChatEventName");

                    b.HasOne("ChatViewer.Repository.Entities.Chatter", "Chatter2")
                        .WithMany("ChatEvents2")
                        .HasForeignKey("Chatter2Id");

                    b.HasOne("ChatViewer.Repository.Entities.Chatter", "Chatter")
                        .WithMany("ChatEvents")
                        .HasForeignKey("ChatterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChatEventType");

                    b.Navigation("Chatter");

                    b.Navigation("Chatter2");
                });

            modelBuilder.Entity("ChatViewer.Repository.Entities.ChatEventType", b =>
                {
                    b.Navigation("ChatEvents");
                });

            modelBuilder.Entity("ChatViewer.Repository.Entities.Chatter", b =>
                {
                    b.Navigation("ChatEvents");

                    b.Navigation("ChatEvents2");
                });
#pragma warning restore 612, 618
        }
    }
}
